<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XFH+A4lTHfbgrfsWAAAAAElFTkSuQmCC
</value>
  </data>
</root>