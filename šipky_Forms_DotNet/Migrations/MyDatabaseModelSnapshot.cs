// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using šipky_Forms.Database;

#nullable disable

namespace šipky_Forms.Migrations
{
    [DbContext(typeof(DbSipky.MyDatabase))]
    partial class MyDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Domain.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allhundred")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allhundred20")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allhundred80")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allsixty")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Average")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OldhighestOut")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wins")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("_100Wins")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("_20Wins")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("first180")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstWin")
                        .HasColumnType("INTEGER");

                    b.Property<int>("highestOut")
                        .HasColumnType("INTEGER");

                    b.Property<int>("hundred")
                        .HasColumnType("INTEGER");

                    b.Property<int>("hundred20")
                        .HasColumnType("INTEGER");

                    b.Property<int>("hundred80")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("profesional")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sixty")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PlayerSettings");
                });

            modelBuilder.Entity("Domain.Settings.PlayerPanels", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BackColorAsArgb")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserSettingsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserSettingsId");

                    b.ToTable("PlayerPanels");
                });

            modelBuilder.Entity("šipky_Forms.Database.UserSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("muteSounds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("Domain.Settings.PlayerPanels", b =>
                {
                    b.HasOne("šipky_Forms.Database.UserSettings", null)
                        .WithMany("panels")
                        .HasForeignKey("UserSettingsId");
                });

            modelBuilder.Entity("šipky_Forms.Database.UserSettings", b =>
                {
                    b.Navigation("panels");
                });
#pragma warning restore 612, 618
        }
    }
}
